<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.spring.mapper.BoardMapper">

<select id="getListWithPaging" resultType="com.spring.domain.BoardVO">
 <!-- 인덱스를 써서 정렬하고 페이지를 나눔 order by보다 빠름 
 부등호를 사용하기 위해 CDATA 사용-->
 <![CDATA[
	select * from
	(select /*+INDEX_DESC(library_board pk_library_board)*/ 
	rownum rn,bno,title,content,writer,regdate,updatedate,readcnt,replycnt
	from library_board where
]]> 
	<include refid="criteria"/>
<![CDATA[ 
	rownum <= #{pageNum}*#{amount})
	where rn > (#{pageNum}-1) * #{amount} order by regdate desc
	]]><!-- pageNum*amount 끝 번호 pageNum-1 * amount 는 시작번호 -->

</select>

<insert id="insertboard">
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select seq_libbno.nextVal from dual
		</selectKey>
insert into library_board(bno,title,content,password,writer,regdate,readcnt)
		values(#{bno},#{title},#{content},#{password},#{writer},sysdate,0)
</insert>

<select id="read" resultType="com.spring.domain.BoardVO">
<!-- select bno,title,writer,content,regdate,updatedate from library_board where bno = #{bno} -->
select * from library_board where bno = #{bno}
</select>

<update id="readCountupdate">
update library_board set readcnt=readcnt+1 where bno=#{bno}
</update>

<update id="updateboard">
		update library_board
		set title=#{title}, content=#{content}, updatedate=sysdate
		where bno=#{bno} and password=#{password}
</update>

<delete id="delete">
delete from library_board where bno=#{bno} and password=#{password}
</delete>

<!-- 전체 게시물 수 구하기 -->
<select id="getCount" resultType="int">
select count(*) from library_board where bno>0
</select>

<!-- 댓글 추가시 replyCnt 변경하기 -->
	<update id="updateReplyCnt">
	update library_board set replycnt=replycnt+#{amount}
	where bno=#{bno}
	</update>

<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach collection="typeArr" item='type'>
				<trim prefix="OR">
					<choose>
						<when test="type=='T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type=='W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

</mapper>